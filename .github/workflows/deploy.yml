name: Deploy to Azure Container Apps

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_CONTAINER_APP_NAME: mcp-server-app
  AZURE_RESOURCE_GROUP: rg-n8n-automation

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Build and Deploy
      run: |
        # Build container locally
        docker build -t n8n-mcp-enhanced:${{ github.sha }} .
        
        # Get Container App details
        CONTAINER_APP_ENV=$(az containerapp show \
          --name ${{ env.AZURE_CONTAINER_APP_NAME }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --query properties.managedEnvironmentId -o tsv)
        
        # Update Container App with new image
        az containerapp update \
          --name ${{ env.AZURE_CONTAINER_APP_NAME }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --image n8n-mcp-enhanced:${{ github.sha }} \
          --set-env-vars \
            N8N_BASE_URL="${{ secrets.N8N_BASE_URL }}" \
            N8N_API_KEY="${{ secrets.N8N_API_KEY }}" \
            ENABLE_WEBSOCKET="true" \
            NODE_ENV="production"
    
    - name: Verify Deployment
      run: |
        sleep 60  # Wait for deployment
        HEALTH_URL=$(az containerapp show \
          --name ${{ env.AZURE_CONTAINER_APP_NAME }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --query properties.configuration.ingress.fqdn -o tsv)
        
        curl -f https://$HEALTH_URL/health || exit 1
        echo "âœ… Deployment successful!"